/**
 * This file was automatically generated by templates/get_migrators.hbs.
 * DO NOT MODIFY IT BY HAND. Instead, modify templates/get_migrators.hbs,
 * and run build script to regenerate this file.
 */

use crate::formats::AnyManifest;

use super::{migrator::Migrator};
use super::migrators::from_0_1_0_to_0_2_0;

pub fn get_migrators() -> Vec<Migrator> {
    return vec![
        Migrator {
            from: "0_1_0".to_string(),
            to: "0_2_0".to_string(),
            migrate: |manifest: AnyManifest| {
                let manifest_arg = match manifest {
                    AnyManifest::PolywrapManifest010(manifest) => manifest,
                    _ => panic!("Invalid manifest format"),
                };

                let migrated = from_0_1_0_to_0_2_0::migrate(manifest_arg);

                return AnyManifest::PolywrapManifest020(migrated);
            },
        },
    ];
}
